var Boom = require('boom');
var r = require('rethinkdb');
var log = require('log');

function auth (server) {

    return {
        authenticate: function authenticate(request, reply) {

            var req = request.raw.req;
            var query;

            if (!req.headers.hasOwnProperty('token')) {
                return reply(Boom.unauthorized('missing token'));
            }

            query = r.db('barter').table('user')
                .getAll(req.headers.token, { index: 'token' })
                .pluck('id', 'username', 'token')
                .limit(1);

            query.run(r.connection).then(function (cursor) {

                return cursor.next().then(function (result) {

                    reply.continue({ credentials: result });

                    cursor.close();

                });

            }).catch(function (err) {

                if (!r.isNoResults(err)) {
                    log.error(err.stack);
                }

                reply(Boom.unauthorized('invalid token'));

            });

        }
    };

}

function register(plugin, options, next) {

    plugin.auth.scheme('simple', auth);
    next();

}

register.attributes = require('./package');

exports.register = register;