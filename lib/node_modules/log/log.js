var __slice = [].slice;

function __serializeValue(value) {
    try {
        return JSON.stringify(value);
    } catch(e) {
        try {
            return value.toString();
        } catch(e) {
            return '';
        }
    }
}

function __serializeObject(object) {

    var message = '';
    var kvpairs = [];
    var k;

    for (k in object) {
        kvpairs.push(k +'='+ __serializeValue(object[k]));
    }

    message = '('+ kvpairs.join(',') +')';

    return message;

}

function log(level, context, msg) {

    var stream = typeof this.write === 'function' ? this : process.stdout;
    var message = '';
    var time = '['+ Date.now() +']';

    level = level || '';

    level += ':';

    if (typeof msg === 'undefined') {
        msg = context;
        context = null;
    }

    if (typeof msg !== 'string') {
        msg = __serializeValue(msg);
    }

    message = [time, level, msg];

    if (context && typeof context === 'object') {
        message.push(__serializeObject(context));
    }

    message = message.join(' ');

    stream.write(message +'\n');

    return message;

}

log.trace = log.bind(null, 'TRACE');
log.info = log.bind(null, 'INFO');
log.debug = log.bind(null, 'DEBUG');
log.warn = log.bind(null, 'WARN');
log.error = log.bind(process.stderr, 'ERROR');
log.fatal = log.bind(process.stderr, 'FATAL');

module.exports = log;
